{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","id","name","className","styles","dialogItem","to","dialogLink","activeClassName","active","Message","message","Dialogs","dialogs","messages","sendNewMessage","isAuth","dialogsElements","map","dialog","messagesElemnts","dialogsItems","inputBlock","initialValues","onSubmit","values","setSubmitting","resetForm","handleChange","handleSubmit","onChange","value","placeholder","textarea","buttonWrapper","type","compose","connect","state","dialogsPage","mewMessage","newMessageText","dispatch","text","sendMessageActionCreator","WithAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,WAAa,+BAA+B,OAAS,6B,oBCAnHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,WAAa,4BAA4B,SAAW,0BAA0B,cAAgB,iC,oBCArOD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,QAAU,2B,+HCYtDC,EAVI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACvB,OACE,qBAAKC,UAAWC,IAAOC,WAAvB,SACE,cAAC,IAAD,CAASC,GAAE,mBAAcL,GAAME,UAAWC,IAAOG,WAAYC,gBAAiBJ,IAAOK,OAArF,SACGP,O,oCCDMQ,EAJC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChB,OAAO,qBAAKR,UAAWC,IAAOO,QAAvB,SAAiCA,KCqD3BC,EAlDC,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC9CC,EAAkBJ,EAAQK,KAAI,SAAAC,GAAM,OACxC,cAAC,EAAD,CAAYjB,KAAMiB,EAAOjB,KAAsBD,GAAIkB,EAAOlB,IAAtBkB,EAAOlB,OAGvCmB,EAAkBN,EAASI,KAAI,SAAAP,GAAO,OAC1C,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BV,GAAIU,EAAQV,IAAxBU,EAAQV,OAGlD,OAAKe,EAGH,8BACE,sBAAKb,UAAWC,IAAOS,QAAvB,UACE,qBAAKV,UAAWC,IAAOiB,aAAvB,SAAsCJ,IACtC,gCACE,qBAAKd,UAAWC,IAAOU,SAAvB,SAAkCM,IAClC,qBAAKjB,UAAWC,IAAOkB,WAAvB,SACE,cAAC,IAAD,CACEC,cAAe,CAAEZ,QAAS,IAC1Ba,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCZ,EAAeU,EAAOd,SACtBgB,EAAU,CAAEF,OAAQ,KACpBC,GAAc,IALlB,SAQG,gBAAGD,EAAH,EAAGA,OAAQG,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAzB,OACC,eAAC,IAAD,WACE,8BACE,0BACE3B,KAAK,UACL4B,SAAUF,EACVG,MAAON,EAAOd,QACdqB,YAAY,qBACZ7B,UAAWC,IAAO6B,aAGtB,qBAAK9B,UAAWC,IAAO8B,cAAvB,SACE,uBAAOV,SAAUK,EAAcM,KAAK,SAASJ,MAAM,2BA7BjD,cAAC,IAAD,CAAUzB,GAAG,YCOpB8B,sBACbC,aAjBsB,SAAAC,GACtB,MAAO,CACLzB,QAASyB,EAAMC,YAAY1B,QAC3BC,SAAUwB,EAAMC,YAAYzB,SAC5B0B,WAAYF,EAAMC,YAAYE,mBAIP,SAAAC,GACzB,MAAO,CACL3B,eAAgB,SAAA4B,GACdD,EAASE,YAAyBD,SAOtCE,IAFaT,CAGbxB","file":"static/js/3.e9081bea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2RuWv\",\"dialogLink\":\"DialogItem_dialogLink__1DOpS\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messages\":\"Dialogs_messages__1w_Up\",\"inputBlock\":\"Dialogs_inputBlock__3kctr\",\"textarea\":\"Dialogs_textarea__PRKXN\",\"buttonWrapper\":\"Dialogs_buttonWrapper__3oK89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"Message_dialogItem__9yWYC\",\"message\":\"Message_message__1MOXo\"};","import { NavLink } from 'react-router-dom';\nimport styles from './DialogItem.module.css';\n\nconst DialogItem = ({id, name}) => {\n  return (\n    <div className={styles.dialogItem}>\n      <NavLink to={`/dialogs/${id}`} className={styles.dialogLink} activeClassName={styles.active}>\n        {name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import styles from './Message.module.css';\n\nconst Message = ({message}) => {\n  return <div className={styles.message}>{message}</div>;\n};\n\nexport default Message;\n","import { Form, Formik } from 'formik';\nimport { Redirect } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport styles from './Dialogs.module.css';\nimport Message from './Message/Message';\n\nconst Dialogs = ({ dialogs, messages, sendNewMessage, isAuth }) => {\n  const dialogsElements = dialogs.map(dialog => (\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\n  ));\n\n  const messagesElemnts = messages.map(message => (\n    <Message message={message.message} key={message.id} id={message.id} />\n  ));\n\n  if (!isAuth) return <Redirect to='/login' />;\n\n  return (\n    <div>\n      <div className={styles.dialogs}>\n        <div className={styles.dialogsItems}>{dialogsElements}</div>\n        <div>\n          <div className={styles.messages}>{messagesElemnts}</div>\n          <div className={styles.inputBlock}>\n            <Formik\n              initialValues={{ message: '' }}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                sendNewMessage(values.message);\n                resetForm({ values: '' });\n                setSubmitting(false);\n              }}\n            >\n              {({ values, handleChange, handleSubmit }) => (\n                <Form>\n                  <div>\n                    <textarea\n                      name='message'\n                      onChange={handleChange}\n                      value={values.message}\n                      placeholder='Enter your message'\n                      className={styles.textarea}\n                    />\n                  </div>\n                  <div className={styles.buttonWrapper}>\n                    <input onSubmit={handleSubmit} type='submit' value='Send' />\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect';\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\n\nconst mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    mewMessage: state.dialogsPage.newMessageText,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendNewMessage: text => {\n      dispatch(sendMessageActionCreator(text));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  WithAuthRedirect,\n)(Dialogs);\n"],"sourceRoot":""}