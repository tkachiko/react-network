{"version":3,"sources":["components/Login/LoginPage.module.css","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/Checkbox.jsx","components/common/FormsControls/TextInput.jsx","components/Login/LoginForm.jsx","components/Login/LoginPage.jsx"],"names":["module","exports","Checkbox","children","props","useField","type","field","meta","className","touched","error","TextInput","label","htmlFor","id","name","styles","inputError","textInput","connect","login","initialValues","email","password","rememberMe","validationSchema","Yup","required","onSubmit","values","setSubmitting","setFieldError","setStatus","status","placeholder","formSummaryError","state","isAuth","auth","to","loginForm"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,iBAAmB,sC,oBCA9ED,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,WAAa,oC,gICiBrDC,EAfE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBAC3C,EAAsBC,YAAS,2BAAKD,GAAN,IAAaE,KAAM,cAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,gCACE,wBAAOC,UAAU,iBAAjB,UACE,+CAAOH,KAAK,YAAeC,GAAWH,IACrCD,KAEFK,EAAKE,SAAWF,EAAKG,MACpB,qBAAKF,UAAU,QAAf,SAAwBD,EAAKG,QAC3B,S,8BCGKC,EAbG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUT,EAAY,iBACzC,EAAsBC,YAASD,GAA/B,mBAAOG,EAAP,KAAcC,EAAd,KACA,OACE,qCACE,uBAAOM,QAASV,EAAMW,IAAMX,EAAMY,KAAlC,SAAyCH,IACzC,cAAC,IAAD,yBAAOJ,UAAWD,EAAKE,SAAWF,EAAKG,MAArB,UAAgCM,IAAOC,YAAvC,UAAyDD,IAAOE,YAAiBZ,GAAWH,IAC7GI,EAAKE,SAAWF,EAAKG,MACpB,sBAAMF,UAAWQ,IAAON,MAAxB,SAAgCH,EAAKG,QACnC,S,2BCuCKS,cAAQ,KAAM,CAAEC,WAAhBD,EA1CG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAClB,OACE,mCACE,cAAC,IAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEdC,iBAAkBC,IAAW,CAC3BJ,MAAOI,MAAaC,SAAS,YAC7BJ,SAAUG,MAAaC,SAAS,cAElCC,SAAU,SAACC,EAAD,GAA0D,IAA/CC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACjDZ,EAAMS,EAAOP,MAAOO,EAAON,SAAUM,EAAOL,WAAYM,EAAeC,EAAeC,GACtFF,GAAc,IAZlB,SAeG,gBAAGG,EAAH,EAAGA,OAAH,OACD,eAAC,IAAD,WACE,cAAC,EAAD,CACErB,MAAM,QACNG,KAAK,QACLV,KAAK,QACL6B,YAAY,oBAEd,cAAC,EAAD,CACEtB,MAAM,WACNG,KAAK,WACLV,KAAK,WACL6B,YAAY,aAEd,cAAC,EAAD,CAAUnB,KAAK,aAAf,yBACA,qBAAKP,UAAWQ,IAAOmB,iBAAvB,SAA0CF,IAC1C,wBAAQ5B,KAAK,SAAb,gCCpBKc,uBAJS,SAAAiB,GAAK,MAAK,CAChCC,OAAQD,EAAME,KAAKD,UAGmB,KAAzBlB,EAhBG,SAAC,GACjB,OAD8B,EAAZkB,OAET,cAAC,IAAD,CAAUE,GAAG,aAGpB,sBAAK/B,UAAWQ,IAAOwB,UAAvB,UACE,yCACA,cAAC,EAAD,CAAWpB,MAAOA","file":"static/js/8.9ae49f44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginPage_loginForm__ZCg92\",\"formSummaryError\":\"LoginPage_formSummaryError__P53oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__9lcue\",\"inputError\":\"FormsControls_inputError__3a1p_\"};","import React from 'react';\nimport { useField } from 'formik';\n\nconst Checkbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n  return (\n    <div>\n      <label className='checkbox-input'>\n        <input type='checkbox' {...field} {...props} />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <div className='error'>{meta.error}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Checkbox;","import { Field, useField } from 'formik';\nimport styles from './FormsControls.module.css';\n\nconst TextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <Field className={meta.touched && meta.error ? `${styles.inputError}` : `${styles.textInput}`} {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <span className={styles.error}>{meta.error}</span>\n      ) : null}\n    </>\n  );\n};\n\nexport default TextInput;","import { Form, Formik } from 'formik';\nimport Checkbox from '../common/FormsControls/Checkbox';\nimport TextInput from '../common/FormsControls/TextInput';\nimport * as Yup from 'yup';\nimport { login } from '../../redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport styles from './LoginPage.module.css';\n\nconst LoginForm = ({login}) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          rememberMe: false,\n        }}\n        validationSchema={Yup.object({\n          email: Yup.string().required('Required'),\n          password: Yup.string().required('Required'),\n        })}\n        onSubmit={(values, { setSubmitting, setFieldError, setStatus }) => {\n          login(values.email, values.password, values.rememberMe, setSubmitting, setFieldError, setStatus);\n          setSubmitting(false);\n        }}\n      >\n        {({ status }) => (\n        <Form>\n          <TextInput\n            label='Email'\n            name='email'\n            type='email'\n            placeholder='jane@formik.com'\n          />\n          <TextInput\n            label='Password'\n            name='password'\n            type='password'\n            placeholder='Password'\n          />\n          <Checkbox name='rememberMe'>Remember me</Checkbox>\n          <div className={styles.formSummaryError}>{status}</div>\n          <button type='submit'>Sign in</button>\n        </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default connect(null, { login })(LoginForm);\n","import { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../redux/auth-reducer';\nimport LoginForm from './LoginForm';\nimport styles from './LoginPage.module.css';\n\nconst LoginPage = ({isAuth}) => {\n  if (isAuth) {\n    return <Redirect to='/profile' />;\n  }\n  return (\n    <div className={styles.loginForm}>\n      <h1>Sign in</h1>\n      <LoginForm login={login} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps, null)(LoginPage);\n"],"sourceRoot":""}