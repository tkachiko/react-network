{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogForm.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogForm","sendMessage","activeDialogId","initialValues","message","onSubmit","values","setSubmitting","resetForm","handleChange","handleSubmit","onKeyDown","e","key","shiftKey","preventDefault","className","styles","textareaBlock","name","onChange","value","placeholder","textarea","buttonWrapper","onkeydown","type","DialogItem","id","to","dialogLink","activeClassName","active","dialogItem","Message","author","photoMe","myMessage","src","userPhoto","alt","companionMessage","Dialogs","dialogs","messages","isAuth","findCompanion","companionName","dialogsElements","map","dialog","messagesElemnts","authorId","dialogsItemsWrapper","dialogsItems","dialogsBlockWrapper","messagesHeading","messagesList","inputBlock","compose","connect","state","dialogsPage","authors","auth","setActiveDialog","withRouter","WithAuthRedirect","props","useState","currentDialogId","setCurrentDialogId","useEffect","Number","parseInt","match","params","dialogId","find","companions","companionId","companion","filter"],"mappings":"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","file":"static/js/3.3d179abb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Dialogs_name__2pejV\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsBlockWrapper\":\"Dialogs_dialogsBlockWrapper__3QZUO\",\"dialogsItemsWrapper\":\"Dialogs_dialogsItemsWrapper__3oo0j\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messagesHeading\":\"Dialogs_messagesHeading__2vKO_\",\"messages\":\"Dialogs_messages__1w_Up\",\"messagesList\":\"Dialogs_messagesList__3P5tp\",\"inputBlock\":\"Dialogs_inputBlock__3kctr\",\"textarea\":\"Dialogs_textarea__PRKXN\",\"textareaBlock\":\"Dialogs_textareaBlock__1a5m7\",\"buttonWrapper\":\"Dialogs_buttonWrapper__3oK89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2RuWv\",\"dialogLink\":\"DialogItem_dialogLink__1DOpS\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"myMessage\":\"Message_myMessage__6CULW\",\"companionMessage\":\"Message_companionMessage__2QtC4\"};","import { Form, Formik } from 'formik';\nimport styles from './Dialogs.module.css';\n\nconst DialogForm = ({ sendMessage, activeDialogId }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{ message: '' }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          sendMessage(values.message, activeDialogId);\n          resetForm({ values: '', activeDialogId });\n          setSubmitting(false);\n        }}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form\n            onKeyDown={e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSubmit();\n              }\n            }}\n          >\n            <div className={styles.textareaBlock}>\n              <textarea\n                name='message'\n                onChange={handleChange}\n                value={values.message}\n                placeholder='Enter your message'\n                className={styles.textarea}\n              />\n              <div className={styles.buttonWrapper}>\n                <input\n                  onSubmit={handleSubmit}\n                  onKeyDown={onkeydown}\n                  type='submit'\n                  value='Send'\n                />\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default DialogForm;\n","import { NavLink } from 'react-router-dom';\nimport styles from './DialogItem.module.css';\n\nconst DialogItem = ({id, name}) => {\n  return (\n    <>\n      <NavLink to={`/dialogs/${id}`} className={styles.dialogLink} activeClassName={styles.active}>\n        <div className={styles.dialogItem}>{name}</div>\n      </NavLink>\n    </>\n  );\n};\n\nexport default DialogItem;\n","import styles from './Message.module.css';\nimport userPhoto from './../../../assets/images/user.png';\n\nconst Message = ({ message, author, photoMe }) => {\n  return (\n    <div className={styles.message}>\n      {author.id === 0 ? (\n        <div className={styles.myMessage}>\n          <span>{message}</span>\n          <img src={photoMe || userPhoto} alt='' />\n        </div>\n      ) : (\n        <div className={styles.companionMessage}>\n          <img src={userPhoto} alt='' />\n          <span>{message}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","import { Redirect } from 'react-router-dom';\nimport DialogForm from './DialogForm';\nimport DialogItem from './DialogItem/DialogItem';\nimport styles from './Dialogs.module.css';\nimport Message from './Message/Message';\n\nconst Dialogs = ({\n  dialogs,\n  messages,\n  sendMessage,\n  isAuth,\n  findCompanion,\n  activeDialogId,\n  companionName,\n}) => {\n  const dialogsElements = dialogs.map(dialog => (\n    <DialogItem\n      name={dialog.name}\n      key={dialog.id}\n      id={dialog.id}\n      activeDialogId={dialog.activeDialogId}\n    />\n  ));\n  const messagesElemnts = messages.map(message => (\n    <Message\n      message={message.message}\n      key={message.id}\n      id={message.id}\n      author={findCompanion(message.authorId)}\n    />\n  ));\n\n  if (!isAuth) return <Redirect to='/login' />;\n\n  return (\n    <>\n      <div className={styles.dialogs}>\n        <div className={styles.dialogsItemsWrapper}>\n          <div className={styles.dialogsItems}>{dialogsElements}</div>\n        </div>\n        <div className={styles.dialogsBlockWrapper}>\n          {activeDialogId ? (\n            <>\n              <div className={styles.messagesHeading}>\n                <h4>Dialog with &#160;</h4>\n                <span className={styles.name}>{companionName}</span>\n              </div>\n              <div className={styles.messagesList}>{messagesElemnts}</div>\n              <div className={styles.inputBlock}>\n                <DialogForm\n                  sendMessage={sendMessage}\n                  activeDialogId={activeDialogId}\n                />\n              </div>\n            </>\n          ) : (\n            <div>\n              <h4>Chose the dialog</h4>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dialogs;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect';\nimport { withRouter } from 'react-router-dom';\nimport { sendMessage, setActiveDialog } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { useEffect, useState } from 'react';\n\nconst DialogContainer = ({\n  dialogs,\n  authors,\n  messages,\n  activeDialogId,\n  isAuth,\n  sendMessage,\n  setActiveDialog,\n  ...props\n}) => {\n  const [currentDialogId, setCurrentDialogId] = useState(null);\n\n  useEffect(() => {\n    setActiveDialog(currentDialogId);\n  }, [currentDialogId]);\n\n  useEffect(() => {\n    setCurrentDialogId(\n      Number.parseInt(props.match.params.dialogId) || activeDialogId,\n    );\n  }, [Number.parseInt(props.match.params.dialogId)]);\n\n  const findCompanion = authorId =>\n    authors.find(author => author.id === authorId);\n\n  const companionName =\n    activeDialogId &&\n    dialogs\n      .find(({ id }) => id === activeDialogId)\n      .companions.map(companionId => findCompanion(companionId))\n      .map(companion => companion.name)[0];\n\n  return (\n    <Dialogs\n      dialogs={dialogs}\n      messages={messages.filter(message => message.dialogId === activeDialogId)}\n      activeDialogId={activeDialogId}\n      companionName={companionName}\n      findCompanion={findCompanion}\n      sendMessage={sendMessage}\n      isAuth={isAuth}\n    />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    authors: state.dialogsPage.authors,\n    messages: state.dialogsPage.messages,\n    activeDialogId: state.dialogsPage.activeDialogId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { sendMessage, setActiveDialog }),\n  withRouter,\n  WithAuthRedirect,\n)(DialogContainer);\n"],"sourceRoot":""}